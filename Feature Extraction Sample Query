----SQL Server Management Studio Query
----Generate features from text and time series data
----Utilizing CTEs, string parsing, window functions, where conditions, group by, cast and more...

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- View used to calculate motor features. Input required for motor prediction failures (Datarbricks - Production - v.M03V02D13)
CREATE view [dbo].[v_Drilling_MotorFeature] as

-- Combine motor component table and well location table. extract text features degree and stage
with cte_motor as
	(
	select 
	c.[WellName]
	,c.[DTTMINCALC] --datetime in
	,c.[DTTMOUTCALC] --datetime out
	,dense_rank() over (partition by c.[wellname] order by wl.[depthjobdone]) as motorno --calculates motor number
	,cast(REPLACE(substring(c.[comp_des],Charindex('Â°', c.[comp_des])-4, 4),'-','') as varchar)  as degree --extract degree feature based on format. Refer to motor degree manual.
	,case when Charindex('stg', c.[comp_des]) > 0 then 
			cast(REPLACE(substring(c.[comp_des],Charindex('stg', c.[comp_des])-5, 4),' ','') as varchar)
		when Charindex('stage', c.[comp_des]) > 0 then 
			cast(REPLACE(substring(c.[comp_des],Charindex('stage', c.[comp_des])-5, 4),' ','') as varchar)
		end as stage -- extract stage feature based on different spelling and format. Refer to motor stage manual
	,sum(c.[power]) over (partition by c.[wellname] order by wl.[depthjobdone] rows between unbounded preceding and current row) as power -- cumulative power over well
	from [ana_drl].[Time_Minute_BHAComponent] c
	left join [ana_drl].[WellListWithLocation] wl on wl.[WellName] = c.[WellName]
	where [Comp_Icon] like'%motor%' and [stringobjective] like '%lat%' --apply where conditions to filter data
	)

--Aggregate data to well and motor sequence level using group by
,cte_cg as
	(
	select [Wellname]
	,max([degree]) as degree -- degree feature is the same at a [Wellname], [motorno] level
	,max([stage]) as stage -- stage feature is the same at a [Wellname], [motorno] level
	,max([power]) as power -- maximum power at wellname, [motorno] level
	,min([DTTMINCALC]) as DTTMINCALC 
	,max([DTTMOUTCALC]) as DTTMOUTCALC 
	from cte_motor
	group by [Wellname], [motorno]
	)

-- Join time series data. calculate feautres based on group by and conditions. 
select 
cg.[WellName]
,cg.[RigName]
,case when cg.[WellName] =  'BB-OLE ANDERSON-LW-151-95-3130H-1' then '3F' 
	when cg.[WellName] =  'CA-ANDERSON SMITH-155-96-2635H-4' then '3F' 
	else mmf.[TargetReservoir] 
	end as mmf.[TargetReservoir] -- Correct specific TargetReservoir based on SME's input
,max(cg.[degree]) as degree  
,max(cg.[stage]) as stage
,max(cg.[power]) as power
FROM [ana_drl].[Time_Second_BitBHARigState] mmf
inner join cte_cg cg on cg.[Wellname] = mmf.[wellname] and mmf.[OperatingSecond] between cg.[DTTMINCALC] and cg.[DTTMOUTCALC] --inner join time series table based datetime in between input and output datetime
where mmf.[rigstate_calc] not like '%trip%' 
group by cg.[WellName],mmf.[TargetReservoir],cg.[motorno]

GO
